---

- name: Setting up VMs ...
  hosts: localhost
  connection: local
  become: true
  become_user: root
  become_method: sudo

  vars_files:
          - config.yml
  tasks:
  - name: Get the links correct
    file:
        src: "{{ dot_dir }}/{{ item }}"
        dest: "{{ user_home_dir }}/.{{ item }}"
        state: link
    with_items: "{{ link_files }}"

  - name: Python3.7 PPA 
    apt_repository:
      validate_certs: no
      repo: 'ppa:deadsnakes/ppa'
      state: present

  - name: Install all apt-packages
    apt: name={{item}} state=present
    with_items:
                - locate
                - cmake 
                - g++ 
                - gfortran 
                - libfreetype6-dev  # for matplotlib
                - libpng-dev  # for matplotlib
                - libjs-mathjax  # for matplotlib
                - fonts-mathjax # for matplotlib
                - libblas-test # for compiling numpy / pandas
                - libopenblas-base # for compiling numpy / pandas
                - libopenblas-dev # for compiling numpy / pandas
                - pkg-config 
                - python-dev 
                - r-base # install R
                - scala # install Scala
                - software-properties-common 
                - wget
                - vmfs-tools 
                - vmware-manager 
                - vim  
                - virtualbox  
                - virtualbox-ext-pack  
                - gnome-system-tools
                  # - linux-headers 
                - build-essential 
                - libncurses5-dev
                - libgdbm-dev
                - libnss3-dev 
                - libssl-dev 
                - libreadline-dev 
                - libffi-dev
                - dkms 
                - qterminal 
                - firefox 
                - htop 
                - autojump 
                - mc 
                - zsh 
                - tmux 
                - git 
                - powerline 
                - python3 
                - python3-pip 
                - python3-setuptools 
                - python3-dev 
                - python3-tk
                - python-tk
                - python3.6 
                - python3.6-dev 
                - python3.6-tk 
                - python3.7-tk 
                - python3.7-dev
                - virtualenv 
                - virtualenvwrapper 
                - libncurses5-dev 
                - libgdbm-dev 
                - libnss3-dev 
                - libssl-dev 
                - libreadline-dev 
                - libffi-dev 
                - sqlite
                - sqlite3
                - tk8.6
                - tk8.6-dev
                - ansible
                - wireshark
                - tshark
                - xsnow

  - name: Downloading Python3 sources
    get_url:
      url: "{{ python3_url }}"
      dest: "/tmp/Python-{{ python3_version }}.tar.gz"
    register: python3_source

  - name: Unpacking Python3
    unarchive:
      copy: no
      src: "{{ python3_source.dest }}"
      dest: /tmp/
    when: python3_source.changed
    register: python3_source_unpack

  - name: Configuring Python3 source with custom modules
    # command: "./configure --enable-optimizations --with-tcltk-includes='-I/usr/include' --with-tcltk-libs='-L/usr/lib64 -ltcl8.6 -L/usr/lib64 -ltk8.6'"
    command: "./configure --enable-optimizations"
    args:
      chdir: "{{ python3_install_dir }}"
    when: python3_source_unpack is changed
    register: python3_configure

  - name: Installing Python3
    become: yes
    shell: make && make install
    args:
      chdir: "{{ python3_install_dir }}"
    when: python3_configure is changed

  - name: creating new virtualenv envs
    # shell: "virtualenv -p {{ item.interpreter }} {{ item.name }}"
    command: "virtualenv {{ virtualenv_dir}}/{{ item.name  }} -p {{item.interpreter}} creates={{ virtualenv_dir }}/{{ item.name }}"
    args:
      chdir: "{{ virtualenv_dir }}/"
    with_items: "{{ virtualenvs }}"
    become_user: "{{ username }}"

  - name: installing pip packages
    pip: 
      # requirements: "/{{ project_name }}/ {{ project_requirements }}"
      requirements: "{{ user_home_dir }}/{{ setup_dir }}/{{ item.rfile }}"
      virtualenv: "{{ virtualenv_dir }}/{{ item.name }}"
      virtualenv_python: "{{ item.interpreter }}"
    with_items: "{{ virtualenvs }}"
    become_user: "{{ username }}"

