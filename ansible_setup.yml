---
- name: Setting up VMs ...
  hosts:  localhost # or ubuntu, see hosts.ini
  connection: local
  become: true
  become_user: root
  become_method: sudo

  roles:
          - role: python # Python3 setup
          # - role: docker # Docker setup
          # - role: java  # Java setup, see java/tasks/main.yml
          # - role: odl # ODL setup
          # - role: opendaylight
          # extra_features: ['odl-netvirt-openstack']

  
  vars_files:
          - config.yml
  tasks:
  - name: Accessing variables in inventory file
    debug:
            msg: "Setting up the following host: {{ ansible_host }}"

  - name: Get the links correct
    file:
        src: "{{ dot_dir }}/{{ item }}"
        dest: "{{ user_home_dir }}/.{{ item }}"
        state: link
        force: true
    become: true
    become_user: "{{ username }}"
    with_items: "{{ link_files }}"
  
  - name: Generate RSA host key
    command : "ssh-keygen -q -t rsa -f {{ ssh_folder }}/{{ ssh_rsa_file }} -C '' -N ''"
    args:
      creates: "{{ ssh_folder }}/{{ ssh_rsa_file }}"

  - name: Generate DSA host key
    command : "ssh-keygen -q -t dsa -f {{ ssh_folder }}/{{ ssh_dsa_file }} -C '' -N ''"
    args:
      creates: "{{ ssh_folder }}/{{ ssh_dsa_file }}"

  - name: Generate ECDSA host key
    command : "ssh-keygen -q -t ecdsa -f {{ ssh_folder }}/{{ ssh_ecdsa_file }} -C '' -N ''"
    args:
      creates: "{{ ssh_folder }}/{{ ssh_ecdsa_file }}"

  - name: Generate RSA host key
    become: true
    become_user: "{{ username }}"
    # TODO: Add these parameters later -o -t rsa -b 4096 -C
    command : "ssh-keygen -q -t rsa -f {{ ssh_user_folder }}/{{ ssh_rsa_file }} -C '' -N ''"
    args:
      creates: "{{ ssh_user_folder }}/{{ ssh_rsa_file }}"

  - name: Generate DSA host key
    become: true
    become_user: "{{ username }}"
    command : "ssh-keygen -q -t dsa -f {{ ssh_user_folder }}/{{ ssh_dsa_file }} -C '' -N ''"
    args:
      creates: "{{ ssh_user_folder }}/{{ ssh_dsa_file }}"

  - name: Generate ECDSA host key
    become: true
    become_user: "{{ username }}"
    command : "ssh-keygen -q -t ecdsa -f {{ ssh_user_folder }}/{{ ssh_ecdsa_file }} -C '' -N ''"
    args:
      creates: "{{ ssh_user_folder }}/{{ ssh_ecdsa_file }}"


  - name: Install all apt-packages
    apt: name={{item}} state=present
    with_items: "{{ apt_packages }}"
  
  - name: Add deb-src in sources.list (necessary for imagemagick)
    apt_repository:
        repo: deb-src http://de.archive.ubuntu.com/ubuntu/ bionic main restricted
        state: present 
        update_cache: yes
  
  # - name: Download and install Imagemagick for U18.04

  - name: Install imagemagick with build dependencies
    apt: name=imagemagick state=build-dep

  - name: Downloading imagemagick sources
    get_url:
      url: "{{ imagemagick_url }}"
      dest: "/tmp/ImageMagick-{{ imagemagick_version }}.tar.gz"
    register: imagemagick_source
    when: install_imagemagick_source == false
  
  - name: Unpacking Imagemagick
    unarchive:
      copy: no
      src: "{{ imagemagick_source.dest }}"
      dest: /tmp/
    when: imagemagick_source.changed and install_imagemagick_source == true
    register: imagemagick_source_unpack 
  
  - name: Configuring Imagemagick source
    command: "./configure"
    args:
      chdir: "{{ imagemagick_install_dir }}"
    when: imagemagick_source_unpack is changed and install_imagemagick_source == true
    register: imagemagick_configure 

  - name: Installing Imagemagick
    become: yes
    shell: make && make install
    args:
      chdir: "{{ imagemagick_install_dir }}"
    when: imagemagick_configure is changed and install_imagemagick_source == true


  - name: Add folders to autojump
    become_user: "{{ username }}"
    command: "autojump --add {{ item }}"
    with_items: "{{ course_folders }}"

 
